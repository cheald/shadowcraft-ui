- content_for :head do
  =javascript_include_tag "/items.js"
  =render "templates"

%h1#head
  %span.name
    #{@character.name}
  %span.info
    #{@character.realm}-#{@character.region}
#tabs
  %ul
    %li
      %a{:href => "#gear"} Gear
    %li
      %a{:href => "#talents"} Talents &amp; Glyphs
    %li
      %a{:href => "#buffs"} Buffs
    %li
      %a{:href => "#target"} Target
    %li
      %a{:href => "#settings"} Settings
    %li
      %a{:href => "#impex"} Import/Export
  #gear
    .slots.half<>
    .floaters
      %section
        #console.floater
          %h3 Notices
          .inner
        #log.floater
          %h3 Log
          .inner
      %section
        #weights.floater
          %h3 Stat Weights
          %dl.inner
          %h3 Boss dodge (%)
          .inner
            %input{:type => "text", :id => "boss_dodge"}
        #stats.floater
          %h3 Stat Totals
          .inner
        #tools.floater
          %h3 Tools
          .inner
            %button{:onclick => "RogueApp.reforgeAll()"} Auto-Reforge All
            %button{:onclick => "RogueApp.optimizeGems()"} Optimize Gems
            %button{:onclick => "RogueApp.ResetLocalStorage()"} Reset Changes
      -#
        .addItem.floater
          %h3 Add An Item
          .inner
            - form_for(Item.new, :remote => true, :html => {"data-type" => "json"}) do |f|
              Item ID
              =f.text_field :remote_id, :size => 6
              =f.submit "Add Item"
      
    #reforge.popup.half
      Reforge this item
    .alternatives.popup.half<
      #filter
        %input{:type => "search", :class => "search", :placeholder => "Filter..."}
      .body
      
  #talents
    #talentframe
    #talentsets.floater
  #buffs
  #target
    #debuffs
  #settings
    %h3 General Settings
    %label
      Level
      =text_field_tag :level
    %label
      Race
      =select_tag :race, options_for_select(["Human", "Dwarf", "Orc", "Blood Elf", "Gnome", "Worgen", "Troll", "Night Elf", "Undead"].sort, @character.race)
    #general
      
    %h3 Professions
    #professions
      
    %h3 Rotation Settings
    #rotation
  #impex
    %h3 Import
    %div
      %textarea{:id => "import"}
    %input{:type => "button", :id => "doImport", :value => "Import", :class => "button"}
    %h3 Export
    %textarea#export

:javascript
  RogueData.WEIGHTS = {
    attack_power: 1,
    agility: 2.88,
    crit_rating: 1.62,
    spell_hit: 2.38,
    hit_rating: 1.69,
    expertise_rating: 2.2,
    haste_rating: 2.25,
    mastery_rating: 0.6,
    strength: 1
  };
  var uuid = "#{@character.name}.#{@character.realm}-#{@character.region}";
  var serverData = #{@character.to_json };
  #{flash[:_reset] ? "$.jStorage.flush();" : nil}
  var localData = $.jStorage.get(uuid, serverData);
  RogueApp.commonInit(jQuery);
  RogueApp.initApp(jQuery, uuid, localData, window.RogueData);
